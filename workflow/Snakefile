configfile: "config/config.yaml"

include: "rules/common.smk"
include: "rules/data/gwas.smk"
#include: "rules/data/insights.smk"
include: "rules/data/splicing_assay.smk"
include: "rules/data/caqtl.smk"
include: "rules/data/dsqtl.smk"
include: "rules/data/eqtl.smk"
include: "rules/data/gnomad.smk"
include: "rules/data/ldscore.smk"
include: "rules/data/omim.smk"
include: "rules/data/sat_mut_mpra.smk"
include: "rules/data/siraj.smk"
include: "rules/features/alphamissense.smk"
include: "rules/features/cadd.smk"
include: "rules/features/caduceus.smk"
include: "rules/features/conservation.smk"
include: "rules/features/dist.smk"
include: "rules/features/enformer.smk"
include: "rules/features/gpn.smk"
include: "rules/features/gpn_msa.smk"
include: "rules/features/grelu.smk"
include: "rules/features/hyenadna.smk"
include: "rules/features/maf.smk"
include: "rules/features/nucleotide_transformer.smk"
include: "rules/model.smk"


rule all:
    input:
        expand(
            "results/dataset/{dataset}/features/{features}.parquet",
            dataset=config["datasets"],
            features=[
                #"Enformer_L2",
                #"Borzoi_L2",
                #"GPN-MSA_absLLR",
                #"GPN-MSA_LLR",
                #"GPN-MSA_InnerProducts",
                #"CADD",
                #"GPN-MSA_RefEmbed",
                #"GPN-MSA_DeltaEmbed",

                "NucleotideTransformer_LLR",
                "NucleotideTransformer_InnerProducts",

                "GPN_LLR",
                "GPN_InnerProducts",

                "HyenaDNA_LLR",
                "HyenaDNA_InnerProducts",
            ],
        )


rule gwas_supervised:
    input:
        expand(
            #"results/dataset/{dataset}/metrics_by_chrom_weighted_average/{subset}/{feature_set}.{classifier}.chrom.csv",
            "results/dataset/{dataset}/metrics_by_odd_even_weighted_average/{subset}/{feature_set}.{classifier}.odd_even.csv",
            dataset=["gwas_matched_9", "eqtl_matched_1"],
            subset=["all"],
            feature_set=[
                "CADD",
                "Enformer_L2",
                "Borzoi_L2",
                "GPN-MSA_absLLR+InnerProducts",

                "NucleotideTransformer_absLLR+InnerProducts",
                "GPN_absLLR+InnerProducts",

                "Enformer_L2+GPN-MSA+CADD",
            ],
            classifier=[
                "LogisticRegression",
            ]
        )


rule omim_supervised:
    input:
        expand(
            "results/dataset/{dataset}/metrics_by_odd_even_weighted_average/{subset}/{feature_set}.{classifier}.odd_even.csv",
            dataset=["omim_subsampled_9"],
            subset=["all"],
            feature_set=[
                "CADD",
                "Enformer_L2",
                "CADD+GPN-MSA_LLR",
                "Borzoi_L2",

                "GPN-MSA_LLR+InnerProducts",

                "NucleotideTransformer_LLR+InnerProducts",
                "GPN_LLR+InnerProducts",
                "HyenaDNA_LLR+InnerProducts",

                "OMIM_Ensemble",
            ],
            classifier=[
                "LogisticRegression",
            ]
        )


rule all_unsupervised:
    input:
        expand(
            "results/dataset/{dataset}/unsupervised_metrics/{subset}/{features}.csv",
            dataset=config["datasets"],
            subset=config["subsets"],
            features=[
                #"Enformer_L2",
                #"Borzoi_L2",
                "Enformer_L2_L2",
                "Borzoi_L2_L2",
                #"GPN-MSA_LLR",
                "GPN-MSA_absLLR",
                #"GPN-MSA_InnerProducts",
                "CADD",
            ],
        )
